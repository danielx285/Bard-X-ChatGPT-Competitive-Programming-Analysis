#include <vector>
#include <algorithm>

class Solution {
public:
    int minProcessingTime(vector<int>& processorTime, vector<int>& tasks) {
        int n = processorTime.size();
        int left = 0, right = 1e9;
        
        while (left < right) {
            int mid = left + (right - left) / 2;
            int currentTask = 0;
            
            for (int i = 0; i < n; ++i) {
                int availableTime = processorTime[i];
                int timeSpent = 0;
                
                while (currentTask < tasks.size() && timeSpent + tasks[currentTask] <= mid) {
                    timeSpent += tasks[currentTask];
                    currentTask++;
                }
                
                availableTime += timeSpent;
            }
            
            if (currentTask == tasks.size()) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        
        return left;
    }
};
