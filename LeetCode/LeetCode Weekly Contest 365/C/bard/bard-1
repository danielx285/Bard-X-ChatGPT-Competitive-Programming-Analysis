class Solution {
public:
    int minSizeSubarray(vector<int>& nums, int target) {
        int n = nums.size();
        vector<int> prefixSum(n + 1);
        for (int i = 1; i <= n; i++) {
            prefixSum[i] = prefixSum[i - 1] + nums[i - 1];
        }

        int left = 0, right = 0, minLen = INT_MAX;
        while (right <= n) {
            int sum = prefixSum[right] - prefixSum[left];
            if (sum < target) {
                right++;
            } else if (sum > target) {
                minLen = min(minLen, right - left);
                left++;
            } else {
                minLen = min(minLen, right - left + 1);
                right++;
                left++;
            }
        }

        return minLen == INT_MAX ? -1 : minLen;
    }
};
