class Solution {
public:
    vector<int> countVisitedNodes(vector<int>& edges) {
        int n = edges.size();
        vector<int> visited(n, 0);
        vector<int> result(n);

        for (int i = 0; i < n; ++i) {
            if (!visited[i]) {
                dfs(i, edges, visited, result);
            }
        }

        return result;
    }

private:
    void dfs(int node, vector<int>& edges, vector<int>& visited, vector<int>& result) {
        visited[node] = 1;
        result[node]++;

        int nextNode = edges[node];
        if (!visited[nextNode]) {
            dfs(nextNode, edges, visited, result);
        }
    }
};
