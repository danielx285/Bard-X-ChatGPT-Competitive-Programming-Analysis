#include <vector>

class Solution {
public:
    long long maximumTripletValue(std::vector<int>& nums) {
        int n = nums.size();
        if (n < 3) {
            return 0;
        }

        long long max_val = LLONG_MIN;
        long long second_max = LLONG_MIN;
        long long third_max = LLONG_MIN;

        for (int i = 0; i < n; ++i) {
            if (nums[i] >= max_val) {
                third_max = second_max;
                second_max = max_val;
                max_val = nums[i];
            } else if (nums[i] >= second_max) {
                third_max = second_max;
                second_max = nums[i];
            } else if (nums[i] > third_max) {
                third_max = nums[i];
            }
        }

        if (third_max == LLONG_MIN) {
            return 0; // All triplets have negative values
        }

        return (max_val - second_max) * third_max;
    }
};
