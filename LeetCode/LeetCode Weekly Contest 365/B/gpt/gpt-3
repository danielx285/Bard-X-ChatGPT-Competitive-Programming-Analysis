class Solution {
public:
    long long maximumTripletValue(vector<int>& nums) {
        int n = nums.size();
        long long max_val = LLONG_MIN; // Initialize max_val to a very small value
        long long second_max = LLONG_MIN; // Initialize second_max to a very small value

        for (int i = 0; i < n; ++i) {
            if (nums[i] >= max_val) {
                second_max = max_val;
                max_val = nums[i];
            } else if (nums[i] > second_max) {
                second_max = nums[i];
            }
        }

        long long result = 0;
        for (int i = 0; i < n; ++i) {
            long long triplet_val = (max_val - nums[i]) * second_max;
            result = max(result, triplet_val);
        }

        return max(result, 0LL); // Return 0 if all triplets have negative values
    }
};
