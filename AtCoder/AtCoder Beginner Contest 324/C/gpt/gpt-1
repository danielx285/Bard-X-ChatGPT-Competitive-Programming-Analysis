#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

int main() {
    int N;
    string T, T_prime;
    cin >> N >> T_prime;

    vector<string> strings(N);
    vector<int> possible_indices;

    for (int i = 0; i < N; i++) {
        cin >> strings[i];
        int diff = strings[i].size() - T_prime.size();

        if (diff == 0) {
            int mismatches = 0;
            for (int j = 0; j < T_prime.size(); j++) {
                if (T_prime[j] != strings[i][j]) {
                    mismatches++;
                }
            }
            if (mismatches == 1) {
                possible_indices.push_back(i + 1);
            }
        } else if (diff == 1) {
            int j = 0, k = 0;
            while (j < T_prime.size() && k < strings[i].size()) {
                if (T_prime[j] == strings[i][k]) {
                    j++;
                }
                k++;
            }
            if (j == T_prime.size()) {
                possible_indices.push_back(i + 1);
            }
        } else if (diff == -1) {
            int j = 0, k = 0;
            while (j < T_prime.size() && k < strings[i].size()) {
                if (T_prime[j] == strings[i][k]) {
                    j++;
                }
                k++;
            }
            if (j == T_prime.size()) {
                possible_indices.push_back(i + 1);
            }
        }
    }

    cout << possible_indices.size() << endl;
    for (int i : possible_indices) {
        cout << i << " ";
    }
    cout << endl;

    return 0;
}
