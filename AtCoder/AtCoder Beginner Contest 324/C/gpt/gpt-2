#include <iostream>
#include <vector>
#include <string>

using namespace std;

int main() {
    int N;
    string T, Tprime;
    cin >> N >> Tprime;
    
    vector<int> possible_indices;
    
    for (int i = 0; i < N; i++) {
        string S;
        cin >> S;
        int len_diff = S.length() - Tprime.length();
        
        if (len_diff == 0) {
            int diff_count = 0;
            for (int j = 0; j < Tprime.length(); j++) {
                if (Tprime[j] != S[j]) {
                    diff_count++;
                }
            }
            if (diff_count == 1) {
                possible_indices.push_back(i + 1);
            }
        } else if (len_diff == 1) {
            int j = 0, k = 0;
            while (j < Tprime.length() && k < S.length()) {
                if (Tprime[j] == S[k]) {
                    j++;
                }
                k++;
            }
            if (j == Tprime.length()) {
                possible_indices.push_back(i + 1);
            }
        } else if (len_diff == -1) {
            int j = 0, k = 0;
            while (j < Tprime.length() && k < S.length()) {
                if (Tprime[j] == S[k]) {
                    j++;
                }
                k++;
            }
            if (j == Tprime.length()) {
                possible_indices.push_back(i + 1);
            }
        }
    }
    
    cout << possible_indices.size() << endl;
    for (int i : possible_indices) {
        cout << i << " ";
    }
    cout << endl;
    
    return 0;
}
